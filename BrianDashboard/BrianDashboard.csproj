<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
	  <!--<Nullable>enable</Nullable>-->
	  <ImplicitUsings>enable</ImplicitUsings>
	  <Configurations>Debug; Release</Configurations>

  </PropertyGroup>

  <ItemGroup>
    <Folder Include="AppScripts\src\components\" />
    <Folder Include="AppScripts\src\sharedComponents\" />
    <Folder Include="Views\Home\" />
    <Folder Include="Views\Info\" />
    <Folder Include="Views\Contact\" />
    <Folder Include="Views\Project\" />
    <Folder Include="wwwroot\images\" />
  </ItemGroup>

	<!--
	1. Install npm packages
	"Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date. MS Build skips the target.
	The first time the task is executed. Then, it only runs when you change the package.json file
	Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
	-->
	<Target Name="NpmInstall" Inputs="package.json" Outputs="../node_modules/.install-stamp" BeforeTargets="BeforeBuild">
		<Exec command="npm install" />
		<!--Write the sample file, so incremental builds work-->
		<Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>
	<!--
		2. Run npm run build before building the .NET project.
		MSBuild runs NpmInstall before this tasks because of the DependsOnTargets attribute
	-->
	<Target Name="NpmRunBuildDebug" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild" Condition=" '$(Configuration)' == 'Debug' ">
		<Message Text="Running NpmRunBuildDev. Configuration: $(Configuration)" Importance="high" />
		<Exec Command="npm run build" />
	</Target>
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild" Condition=" '$(Configuration)' == 'Release' ">
		<Message Text="Running NpmRunBuild. Configuration: $(Configuration)" Importance="high" />
		<Exec Command="npm run build" />
	</Target>
</Project>
